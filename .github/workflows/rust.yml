name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  GODOT_VERSION: 3.3.4
  EXPORT_NAME: vtt-client

jobs:
  build-rust:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - run: rustup default beta
    - name: Run tests
      run: cargo test --verbose
    - run: rustup target add x86_64-pc-windows-gnu && rustup toolchain install beta-x86_64-pc-windows-gnu
    - run: rustup target add x86_64-apple-darwin && rustup toolchain install beta-x86_64-apple-darwin
    - name: Build Linux
      run: cargo build --verbose --release
    - name: Build Windows
      run: cargo build --verbose --release --target x86_64-pc-windows-gnu
    - name: Build Mac
      run: cargo build --verbose --release --target x86_64-apple-darwin
    - name: Upload Client Lib
      uses: actions/upload-artifact@v2
      with:
        name: client-lib
        path: target/*/client-lib.*
    - name: Upload Server
      uses: actions/upload-artifact@v2
      with:
        name: ${{matrix.os}}-server
        path: target/release/server.*
  
  export-windows:
    needs: build-rust
    name: Windows Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.3.4
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Download Client Lib
        uses: actions/download-arifact@v2
        with:
          name: windows-client-lib
          path: client-godot/
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          cd $EXPORT_NAME
          godot -v --export "Windows Desktop" ../build/windows/$EXPORT_NAME.exe
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: windows
          path: build/windows
  
  
  export-mac:
    name: Mac Export
    needs: build-rust
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.3.4
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Download Client Lib
        uses: actions/download-arifact@v2
        with:
          name: macos-client-lib
          path: client-godot/
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Mac Build
        run: |
          mkdir -v -p build/mac
          cd $EXPORT_NAME
          godot -v --export "Mac OSX" ../build/mac/$EXPORT_NAME.zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: mac
          path: build/mac
          
  export-linux:
    name: Linux Export
    needs: build-rust
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.3.4
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Download Client Lib
        uses: actions/download-arifact@v2
        with:
          name: ubuntu-client-lib
          path: client-godot/
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          cd $EXPORT_NAME
          godot -v --export "Linux/X11" ../build/linux/$EXPORT_NAME.x86_64
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: linux
          path: build/linux
